{"version":3,"sources":["roundplot.es6"],"names":[],"mappings":"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","file":"roundplot.js","sourcesContent":["function RoundPlot(params={}) {\n  this.data = new RoundPlot.Data(params.data);\n  this.clockRadius = params.clockRadius || 100;\n  this.size = params.size || 500;\n  this.svg = d3.select(params.target+\" svg\");\n  if (this.svg.node() === null) this.svg = this.createSVG(params.target, this.size); \n  this.addHandlers();\n  this.t0  = params.t0 ||  this.data.first().date;\n  this.timeInClock = params.timeInClock || 12 * 60 * 60 * 1000; // Default to 12 hours in the clock\n  if (params.dateFormat) this.dateFormat = params.dateFormat;\n  if (params.valueToColor) this.valueToColor = params.valueToColor;\n  this.paint();\n  this.moveCursor(this.data.last());\n}\n\nRoundPlot.prototype = {\n  scale(x) {\n    return this.clockRadius + this.data.norm(x) * (this.size/2 - this.clockRadius);\n  },\n  setData(rawData, moveCursor=true) {\n    this.data = new RoundPlot.Data(rawData);\n    if (moveCursor) this.moveCursor(this.data.last());\n    this.paint();\n  },\n  dateToAngle(d) { //Returns an angle in degrees\n    return (d - this.t0) * 360 / this.timeInClock;\n  },\n  dateFormat(d) {\n    const pad = n => ('0'+n).slice(-2);\n    const day = d.getDay(), month = d.getMonth(), h = d.getHours(), m = d.getMinutes();\n    return `${pad(day)}/${pad(month+1)} ${pad(h)}:${pad(m)}`;\n  },\n  valueFormat  : v => v.valueOf().toFixed(0),\n  valueToColor(v) {\n    const r = this.data.norm(v.valueOf());\n    return d3.rgb(255*r, 255*(1-r),0);\n  },\n  createSVG(target, size) {\n    const middle = this.size/2, radius = this.clockRadius, lineHeight = radius/5;\n    return d3.select(target).html(`\n      <svg width=\"${size}\" height=\"${size}\">\n        <style>\n          #cursor{\n            stroke : #999;\n          }\n          #legend > text {\n            text-anchor: middle;\n            font-size: 20;\n            font-family: mono;\n          }\n          #dateLegend {\n            fill: #999;\n          }\n          .valueBar {\n            stroke-dasharray: 5,5;\n            stroke-width: 2;\n          }\n          .circ {\n            fill: none;\n          }\n        </style>\n        <line id=\"cursor\"\n              x1=\"${size/2}\" y1=\"${size/2 - this.clockRadius + 10}\"\n              x2=\"${size/2}\" y2=\"0\"></line>\n        <g id=\"legend\">\n          <text id=\"dateLegend\"\n                x=\"${size/2}\" y=\"${middle - radius/2 + lineHeight}\"></text>\n          <text id=\"valueLegend\"\n                x=\"${size/2}\" y=\"${middle + radius/2 - lineHeight}\"></text>\n        </g>\n      </svg>\n    `).select(\"svg\");\n  },\n  paintValueBars() {\n    const valueBars = this.svg.selectAll(\"line.valueBar\").data(this.data.raw);\n    const s = this.size, m=s/2, r = this.clockRadius;\n    valueBars.enter().append(\"line\")\n      .attr(\"class\", \"valueBar\")\n      .attr(\"id\", d => \"datum-\"+d.date)\n      .attr(\"x1\", m).attr(\"y1\", m-r).attr(\"x2\", m);\n    valueBars.attr(\"transform\", d => {\n        const alpha = this.dateToAngle(d.date);\n        return `rotate(${alpha}, ${m}, ${m})`\n    });\n    valueBars\n      .transition()\n      .attr(\"y2\", d => m - this.scale(d.value))\n      .attr(\"stroke\", d => this.valueToColor(d.value));\n    valueBars.exit().remove();\n  },\n  paintCircs() {\n    const m = this.size/2;\n    const circs = this.svg.selectAll(\"circle.circ\")\n      .data([this.data.min, (this.data.max+this.data.min)/2, this.data.max]);\n    circs.enter()\n      .append(\"circle\").attr(\"class\", \"circ\");\n    circs.attr(\"cx\", m).attr(\"cy\", m).attr(\"r\", d=>this.scale(d))\n         .attr(\"stroke\", d=>d3.rgb(10+100*this.data.norm(d), 20, 20))\n  },\n  paint() {\n    this.paintValueBars();\n    this.paintCircs();\n  },\n  moveCursor(datum) {\n    const angle = this.dateToAngle(datum.date) * Math.PI/180  - Math.PI/2;\n    const max = this.data.max;\n    this.svg.select(\"#cursor\")\n       .attr(\"x1\", this.size/2 + Math.cos(angle)*(this.clockRadius-10))\n       .attr(\"y1\", this.size/2 + Math.sin(angle)*(this.clockRadius-10))\n       .attr(\"x2\", this.size/2 + Math.cos(angle)*this.scale(max))\n       .attr(\"y2\", this.size/2 + Math.sin(angle)*this.scale(max));\n    this.svg.select(\"#dateLegend\").text(this.dateFormat(datum.date));\n    this.svg.select(\"#valueLegend\")\n              .text(this.valueFormat(datum.value))\n              .transition()\n              .attr(\"fill\", this.valueToColor(datum.value));\n  },\n  addHandlers() {\n    this.svg.on(\"mousemove\", () => {\n      const [x,y] = d3.mouse(this.svg.node());\n      const m = this.size/2;\n      const angle = Math.atan2(x-m, m-y) * 180 / Math.PI;\n      const dist = d => (Math.abs(this.dateToAngle(d.date)-angle) + 360 ) % 360;\n      var datum = this.data.raw.reduce((p,c) => dist(p) < dist(c) ? p : c);\n      this.moveCursor(datum);\n    });\n    this.svg.on(\"click\", () => d3.event.preventDefault() && false);\n  }\n};\n\nRoundPlot.Data = function Data(raw) {\n  this.raw = raw;\n  var values = raw.map(d=>d.value.valueOf());\n  this.min = values.reduce((a,b)=>a<b?a:b);\n  this.max = values.reduce((a,b)=>a>b?a:b);\n}\nRoundPlot.Data.prototype = {\n  norm(x) {return (x-this.min) / (this.max - this.min)},\n  first() {return this.raw[0]},\n  last()  {return this.raw[this.raw.length-1]}\n}\n"],"sourceRoot":"/source/"}